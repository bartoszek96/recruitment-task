{"version":3,"sources":["GlobalStyle.js","contexts/MenuTextVisibilityContext/MenuTextVisibilityContext.js","components/Burger/Burger.styles.js","components/Burger/Burger.js","containers/MenuItemsContainer/MenuItemsContainer.styles.js","containers/MenuItemsContainer/MenuItemsContainer.js","pages/Home/Home.styles.js","pages/Home/Home.js","pages/Link1/Link1.styles.js","pages/Link1/Link1.js","pages/Link2/Link2.styles.js","pages/Link2/Link2.js","pages/Error/Error.styles.js","pages/Error/Error.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","normalize","MenuTextVisibilityContext","React","createContext","StyledIcon","styled","div","Burger","handleBurgerClick","isSideNavOpened","TimesIcon","icon","faTimes","BarsIcon","faBars","onClick","isOpened","StyledSideNav","nav","StyledMenuItem","withStyles","root","color","MenuItem","MenuItemsContainer","isTextVisible","useContext","label","link","map","item","to","key","StyledSection","section","StyledErrorSection","StyledLoaderSection","StyledList","ul","Home","handleShowMenuTextButtonClick","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","fetchUsersData","a","fetch","result","json","Button","variant","type","data-testid","user","id","first_name","last_name","Link1","Link2","Switch","onChange","checked","Error","App","toggleIsSideNavOpened","isMenuTextVisible","setIsMenuTextVisible","Provider","value","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.025d0636.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\n \r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: Roboto;\r\n  }\r\n\r\n  body {\r\n    overflow-x: hidden;\r\n  }\r\n`;\r\n \r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\n\r\nconst MenuTextVisibilityContext = React.createContext();\r\nexport default MenuTextVisibilityContext;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledIcon = styled.div`\r\n  position: fixed;\r\n  top: 40;\r\n  left: 40;\r\n  z-index: 20;\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  display: flex;\r\n  items-align: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default StyledIcon;\r\n","import React from 'react';\r\nimport { StyledIcon } from './Burger.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Burger = ({ handleBurgerClick, isSideNavOpened }) => {\r\n\r\n  const TimesIcon = <FontAwesomeIcon icon={faTimes} />;\r\n  const BarsIcon = <FontAwesomeIcon icon={faBars} />;\r\n\r\n  return (\r\n    <StyledIcon onClick={handleBurgerClick} isOpened={isSideNavOpened}>\r\n      { isSideNavOpened ? TimesIcon : BarsIcon }\r\n    </StyledIcon>\r\n  )\r\n}\r\nexport default Burger","import styled from 'styled-components';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport const StyledSideNav = styled.nav`\r\n  transform: ${({ isSideNavOpened }) => isSideNavOpened ? 'translateX(0%)' : 'translateX(-100%)'};\r\n  transition: transform .5s;\r\n  position: fixed;\r\n  left: 0;\r\n  width: 200px;\r\n  height: 100vh;\r\n  padding-top: 60px;\r\n  border-right: 5px solid black;\r\n  background: rgb(165, 165, 165);\r\n\r\n  & a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const StyledMenuItem = withStyles({\r\n  root: {\r\n    color: 'blue',\r\n  }\r\n})(MenuItem);\r\n","import React, { useContext } from 'react';\r\nimport { StyledSideNav, StyledMenuItem } from './MenuItemsContainer.styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport MenuTextVisibilityContext from '../../contexts/MenuTextVisibilityContext/MenuTextVisibilityContext';\r\n\r\nconst MenuItemsContainer = ({ isSideNavOpened, handleBurgerClick }) => {\r\n\r\n  const isTextVisible = useContext(MenuTextVisibilityContext);\r\n\r\n  const menuItems = [\r\n    {\r\n      label: \"Link1\",\r\n      link: \"link1\"\r\n    },\r\n    {\r\n      label: \"Link2\",\r\n      link: \"link2\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <StyledSideNav isSideNavOpened={isSideNavOpened}>\r\n      {menuItems.map((item) => (\r\n        <NavLink to={item.link} onClick={handleBurgerClick} key={item.label}>\r\n          <StyledMenuItem>{item.label}</StyledMenuItem>\r\n        </NavLink>\r\n      ))}\r\n      {isTextVisible && 'TEKST'}\r\n    </StyledSideNav>\r\n  );\r\n}\r\n\r\nexport default MenuItemsContainer;","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.section`\r\n  margin: auto;\r\n  width: 50%;\r\n  text-align: center;\r\n`;\r\n\r\nexport const StyledErrorSection = styled(StyledSection)`\r\n  color: red;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const StyledLoaderSection = styled(StyledSection)`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledList = styled.ul`\r\n  padding: 20px;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyledSection,\r\n  StyledErrorSection,\r\n  StyledList,\r\n  StyledLoaderSection\r\n} from './Home.styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Home = ({ handleShowMenuTextButtonClick }) => {\r\n\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUsersData = async () => {\r\n      try {\r\n        setError('');\r\n        const result = await fetch('https://reqres.in/api/users?page=2');\r\n        const json = await result.json();\r\n        setData(json);\r\n        setIsLoading(false);\r\n      } catch {\r\n        setError('Data fetching error!');\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    setIsLoading(true);\r\n    fetchUsersData();\r\n  }, [])\r\n\r\n  return (\r\n    <StyledSection>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleShowMenuTextButtonClick}>\r\n        POKAÅ»\r\n      </Button>\r\n      <StyledErrorSection>\r\n        {error}\r\n      </StyledErrorSection>\r\n      <StyledLoaderSection>\r\n        {isLoading && <ReactLoading type='spin' color='black' data-testid='loader' />}\r\n      </StyledLoaderSection>\r\n      <StyledList>\r\n        {\r\n          data &&\r\n          data.data.map(user => (\r\n            <li key={user.id}>{user.first_name} {user.last_name}</li>\r\n          ))\r\n        }\r\n      </StyledList>\r\n    </StyledSection>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.div`\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  border: 1px red solid;\r\n  margin: auto;\r\n  width: 50%;\r\n`;\r\n","import React from 'react';\r\nimport { StyledSection } from './Link1.styles';\r\n\r\nconst Link1 = () => {\r\n  return (\r\n    <StyledSection>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Dicta molestiae consectetur a dignissimos autem ad corrupti, quis nisi totam quos vitae itaque facere! Quos minus odit explicabo suscipit nemo iusto.\r\n    </StyledSection>\r\n  );\r\n}\r\n\r\nexport default Link1;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.section`\r\n  margin: auto;\r\n  width: 50%;\r\n  text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { StyledSection } from './Link2.styles';\r\n\r\nconst Link2 = ({ handleBurgerClick, isSideNavOpened }) => {\r\n  return (\r\n    <StyledSection>\r\n      <Switch onChange={handleBurgerClick} checked={isSideNavOpened} />\r\n    </StyledSection>\r\n  );\r\n}\r\n\r\nexport default Link2;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.section`\r\n  color: red;\r\n  margin: auto;\r\n  width: 50%;\r\n  text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport { StyledSection } from './Error.styles';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <StyledSection>This page does not exist</StyledSection>\r\n  );\r\n}\r\n \r\nexport default Error;\r\n","import React, { useState } from 'react';\nimport GlobalStyle from './GlobalStyle';\nimport {\n  HashRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport MenuTextVisibilityContext from './contexts/MenuTextVisibilityContext/MenuTextVisibilityContext';\nimport Burger from './components/Burger/Burger';\nimport MenuItemsContainer from './containers/MenuItemsContainer/MenuItemsContainer';\nimport Home from './pages/Home/Home';\nimport Link1 from './pages/Link1/Link1';\nimport Link2 from './pages/Link2/Link2';\nimport Error from './pages/Error/Error';\n\nfunction App() {\n\n  const [isSideNavOpened, toggleIsSideNavOpened] = useState(false);\n  const [isMenuTextVisible, setIsMenuTextVisible] = useState(false);\n\n  const handleBurgerClick = () => {\n    toggleIsSideNavOpened(!isSideNavOpened);\n  }\n\n  const handleShowMenuTextButtonClick = () => {\n    setIsMenuTextVisible(true);\n  }\n\n  return (\n    <MenuTextVisibilityContext.Provider value={isMenuTextVisible}>\n      <GlobalStyle />\n      <HashRouter basename='/'>\n        <Burger handleBurgerClick={handleBurgerClick} isSideNavOpened={isSideNavOpened} />\n        <MenuItemsContainer isSideNavOpened={isSideNavOpened} handleBurgerClick={handleBurgerClick} />\n        <Switch>\n          <Route path='/' exact component={() => <Home handleShowMenuTextButtonClick={handleShowMenuTextButtonClick} />} />\n          <Route path='/link1' component={Link1} />\n          <Route path='/link2' component={() => <Link2 handleBurgerClick={handleBurgerClick} isSideNavOpened={isSideNavOpened} />} />\n          <Route component={Error} />\n        </Switch>\n      </HashRouter>\n    </MenuTextVisibilityContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}